<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">60</stringProp>
        <stringProp name="ThreadGroup.ramp_time">20</stringProp>
        <longProp name="ThreadGroup.start_time">1470473804000</longProp>
        <longProp name="ThreadGroup.end_time">1470473804000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="mvd_full" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:pgufg=&quot;http://idecs.atc.ru/pgufg/ws/fgapc/&quot; xmlns=&quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&quot; xmlns:ns1=&quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&quot; xmlns:ns=&quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&quot;&gt;&#xd;
  &lt;soapenv:Header&gt;&#xd;
  &lt;/soapenv:Header&gt;&#xd;
  &lt;soapenv:Body&gt;&#xd;
    &lt;ns:setApplicationRequest&gt;&#xd;
    full&#xd;
    &lt;/ns:setApplicationRequest&gt;&#xd;
  &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/SID0003030</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="big file 1 mb" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;jmeterTestPlan version=&quot;1.2&quot; properties=&quot;2.8&quot; jmeter=&quot;2.13 r1665067&quot;&gt;&#xd;
  &lt;hashTree&gt;&#xd;
    &lt;TestPlan guiclass=&quot;TestPlanGui&quot; testclass=&quot;TestPlan&quot; testname=&quot;Test Plan&quot; enabled=&quot;true&quot;&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.comments&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.functional_mode&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;boolProp name=&quot;TestPlan.serialize_threadgroups&quot;&gt;false&lt;/boolProp&gt;&#xd;
      &lt;elementProp name=&quot;TestPlan.user_defined_variables&quot; elementType=&quot;Arguments&quot; guiclass=&quot;ArgumentsPanel&quot; testclass=&quot;Arguments&quot; testname=&quot;User Defined Variables&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;collectionProp name=&quot;Arguments.arguments&quot;/&gt;&#xd;
      &lt;/elementProp&gt;&#xd;
      &lt;stringProp name=&quot;TestPlan.user_define_classpath&quot;&gt;&lt;/stringProp&gt;&#xd;
    &lt;/TestPlan&gt;&#xd;
    &lt;hashTree&gt;&#xd;
      &lt;ThreadGroup guiclass=&quot;ThreadGroupGui&quot; testclass=&quot;ThreadGroup&quot; testname=&quot;Thread Group&quot; enabled=&quot;true&quot;&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.on_sample_error&quot;&gt;continue&lt;/stringProp&gt;&#xd;
        &lt;elementProp name=&quot;ThreadGroup.main_controller&quot; elementType=&quot;LoopController&quot; guiclass=&quot;LoopControlPanel&quot; testclass=&quot;LoopController&quot; testname=&quot;Loop Controller&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;LoopController.continue_forever&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;intProp name=&quot;LoopController.loops&quot;&gt;-1&lt;/intProp&gt;&#xd;
        &lt;/elementProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.num_threads&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.ramp_time&quot;&gt;20&lt;/stringProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.start_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;longProp name=&quot;ThreadGroup.end_time&quot;&gt;1470473804000&lt;/longProp&gt;&#xd;
        &lt;boolProp name=&quot;ThreadGroup.scheduler&quot;&gt;true&lt;/boolProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.duration&quot;&gt;300&lt;/stringProp&gt;&#xd;
        &lt;stringProp name=&quot;ThreadGroup.delay&quot;&gt;&lt;/stringProp&gt;&#xd;
      &lt;/ThreadGroup&gt;&#xd;
      &lt;hashTree&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;ViewResultsFullVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;View Results Tree&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;ResultCollector guiclass=&quot;StatVisualizer&quot; testclass=&quot;ResultCollector&quot; testname=&quot;Aggregate Report&quot; enabled=&quot;false&quot;&gt;&#xd;
          &lt;boolProp name=&quot;ResultCollector.error_logging&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;objProp&gt;&#xd;
            &lt;name&gt;saveConfig&lt;/name&gt;&#xd;
            &lt;value class=&quot;SampleSaveConfiguration&quot;&gt;&#xd;
              &lt;time&gt;true&lt;/time&gt;&#xd;
              &lt;latency&gt;true&lt;/latency&gt;&#xd;
              &lt;timestamp&gt;true&lt;/timestamp&gt;&#xd;
              &lt;success&gt;true&lt;/success&gt;&#xd;
              &lt;label&gt;true&lt;/label&gt;&#xd;
              &lt;code&gt;true&lt;/code&gt;&#xd;
              &lt;message&gt;true&lt;/message&gt;&#xd;
              &lt;threadName&gt;true&lt;/threadName&gt;&#xd;
              &lt;dataType&gt;true&lt;/dataType&gt;&#xd;
              &lt;encoding&gt;false&lt;/encoding&gt;&#xd;
              &lt;assertions&gt;true&lt;/assertions&gt;&#xd;
              &lt;subresults&gt;true&lt;/subresults&gt;&#xd;
              &lt;responseData&gt;false&lt;/responseData&gt;&#xd;
              &lt;samplerData&gt;false&lt;/samplerData&gt;&#xd;
              &lt;xml&gt;false&lt;/xml&gt;&#xd;
              &lt;fieldNames&gt;false&lt;/fieldNames&gt;&#xd;
              &lt;responseHeaders&gt;false&lt;/responseHeaders&gt;&#xd;
              &lt;requestHeaders&gt;false&lt;/requestHeaders&gt;&#xd;
              &lt;responseDataOnError&gt;false&lt;/responseDataOnError&gt;&#xd;
              &lt;saveAssertionResultsFailureMessage&gt;false&lt;/saveAssertionResultsFailureMessage&gt;&#xd;
              &lt;assertionsResultsToSave&gt;0&lt;/assertionsResultsToSave&gt;&#xd;
              &lt;bytes&gt;true&lt;/bytes&gt;&#xd;
              &lt;threadCounts&gt;true&lt;/threadCounts&gt;&#xd;
            &lt;/value&gt;&#xd;
          &lt;/objProp&gt;&#xd;
          &lt;stringProp name=&quot;filename&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/ResultCollector&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
        &lt;HTTPSamplerProxy guiclass=&quot;HttpTestSampleGui&quot; testclass=&quot;HTTPSamplerProxy&quot; testname=&quot;HTTP Request&quot; enabled=&quot;true&quot;&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.postBodyRaw&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;elementProp name=&quot;HTTPsampler.Arguments&quot; elementType=&quot;Arguments&quot;&gt;&#xd;
            &lt;collectionProp name=&quot;Arguments.arguments&quot;&gt;&#xd;
              &lt;elementProp name=&quot;&quot; elementType=&quot;HTTPArgument&quot;&gt;&#xd;
                &lt;boolProp name=&quot;HTTPArgument.always_encode&quot;&gt;false&lt;/boolProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.value&quot;&gt;&amp;lt;soapenv:Envelope xmlns:soapenv=&amp;quot;http://schemas.xmlsoap.org/soap/envelope/&amp;quot; xmlns:pgufg=&amp;quot;http://idecs.atc.ru/pgufg/ws/fgapc/&amp;quot; xmlns=&amp;quot;urn://x-artefacts-it-ru/dob/state-services/road-police/business-data/1.3.1&amp;quot; xmlns:ns1=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/common-types/1.5&amp;quot; xmlns:ns=&amp;quot;urn://x-artefacts-it-ru/dob/poltava/application/types/1.0&amp;quot;&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Header&amp;gt;&amp;#xd;&#xd;
  &amp;lt;soapenv:Body&amp;gt;&amp;#xd;&#xd;
    &amp;lt;ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
    full&amp;#xd;&#xd;
    &amp;lt;/ns:setApplicationRequest&amp;gt;&amp;#xd;&#xd;
  &amp;lt;/soapenv:Body&amp;gt;&amp;#xd;&#xd;
&amp;lt;/soapenv:Envelope&amp;gt;&lt;/stringProp&gt;&#xd;
                &lt;stringProp name=&quot;Argument.metadata&quot;&gt;=&lt;/stringProp&gt;&#xd;
              &lt;/elementProp&gt;&#xd;
            &lt;/collectionProp&gt;&#xd;
          &lt;/elementProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.domain&quot;&gt;localhost&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.port&quot;&gt;8000&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.connect_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.response_timeout&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.protocol&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.contentEncoding&quot;&gt;&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.path&quot;&gt;/SID0003030&lt;/stringProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.method&quot;&gt;POST&lt;/stringProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.follow_redirects&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.auto_redirects&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.use_keepalive&quot;&gt;true&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.DO_MULTIPART_POST&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;boolProp name=&quot;HTTPSampler.monitor&quot;&gt;false&lt;/boolProp&gt;&#xd;
          &lt;stringProp name=&quot;HTTPSampler.embedded_url_re&quot;&gt;&lt;/stringProp&gt;&#xd;
        &lt;/HTTPSamplerProxy&gt;&#xd;
        &lt;hashTree/&gt;&#xd;
      &lt;/hashTree&gt;&#xd;
      bigfile&#xd;
    &lt;/hashTree&gt;&#xd;
  &lt;/hashTree&gt;&#xd;
&lt;/jmeterTestPlan&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8000</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/bigfile</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">30</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
